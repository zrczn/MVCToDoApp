// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ToDo.ApplicationDBContext;

#nullable disable

namespace ToDo.Migrations
{
    [DbContext(typeof(AppDbCon))]
    partial class AppDbConModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ToDo.Models.AudioModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("ToDoModelId")
                        .HasColumnType("bigint");

                    b.Property<string>("URL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ToDoModelId")
                        .IsUnique();

                    b.ToTable("audioModels");
                });

            modelBuilder.Entity("ToDo.Models.PhotoModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("ToDoModelId")
                        .HasColumnType("bigint");

                    b.Property<string>("URL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ToDoModelId")
                        .IsUnique();

                    b.ToTable("photoModels");
                });

            modelBuilder.Entity("ToDo.Models.ToDoModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Contents")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.Property<int>("RoutineOption")
                        .HasColumnType("int");

                    b.Property<DateTime>("ShowAtSingleDay")
                        .HasColumnType("datetime2");

                    b.Property<string>("Topic")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("toDoModels");
                });

            modelBuilder.Entity("ToDo.Models.AudioModel", b =>
                {
                    b.HasOne("ToDo.Models.ToDoModel", "ToDoModel")
                        .WithOne("Audio")
                        .HasForeignKey("ToDo.Models.AudioModel", "ToDoModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ToDoModel");
                });

            modelBuilder.Entity("ToDo.Models.PhotoModel", b =>
                {
                    b.HasOne("ToDo.Models.ToDoModel", "ToDoModel")
                        .WithOne("Photo")
                        .HasForeignKey("ToDo.Models.PhotoModel", "ToDoModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ToDoModel");
                });

            modelBuilder.Entity("ToDo.Models.ToDoModel", b =>
                {
                    b.Navigation("Audio")
                        .IsRequired();

                    b.Navigation("Photo")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
